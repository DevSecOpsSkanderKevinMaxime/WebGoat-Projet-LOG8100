name: Publish Docker image

on:
    # workflow_run:
    #   workflows: [CodeQL]
    #   types:
    #     - completed
    push:
        branches:
            - feature/image-analysis-tools

jobs:
    push_to_registry:
        name: Push Docker image to Docker Hub
        runs-on: ubuntu-latest
        permissions:
            packages: write
            contents: read
            attestations: write
            id-token: write
        steps:
            - name: Check out the repo
              uses: actions/checkout@v2

            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v3
              with:
                  images: log8100projet/projetfinal

            - name: Build and push Docker image
              id: push
              uses: docker/build-push-action@v3
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: |
                      log8100projet/projetfinal:latest
                      ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
            - name: Scan docker image before deployment
              uses: aquasecurity/trivy-action@0.28.0
              with:
                  image-ref: "log8100projet/projetfinal:latest"
                  format: table
                  scan-type: image
                  output: trivy-report.json
                  # adding this argument because scanning is too slow
                  args: "--scanners vuln"
            - name: Upload trivy artifact results
              uses: actions/upload-artifact@v4
              with:
                  name: trivy-report
                  path: trivy-report.json
                  retention-days: 30
            # - name: Install Dependencies
            #   run: |
            #       curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
            #       sudo install minikube-linux-amd64 /usr/local/bin/minikube

            # - name: Start Minikube with Nodes
            #   run: |
            #       chmod +x ./terraform/setup_minikube.sh
            #       ./terraform/setup_minikube.sh

            # - name: Run Terraform Apply
            #   working-directory: ./terraform
            #   run: |
            #       terraform init
            #       terraform apply -auto-approve

            # - name: Run Ansible Playbook for Initial Configuration
            #   run: |
            #       ansible-playbook ./ansible/playbook.yml
